{"componentChunkName":"component---src-templates-blog-post-js","path":"/How to use Git/Git/","result":{"data":{"site":{"siteMetadata":{"title":"Crithinking"}},"markdownRemark":{"id":"3dc6140a-076f-536b-9209-f31ac0fe20e7","excerpt":"Git 是一款十分好用的分布式版本控制工具，作为一名开发者，无论你喜不喜欢它，你都不能离开它，也不能不学习它。 Git 本章节介绍Git的基本知识、Git下载安装、环境配置。 首先需要指明的是，GitHub不等于Git。GitHub是一个拥有很多仓库的在线网站，它的本体是一个Git服务器，这个Git…","html":"<p>Git 是一款十分好用的分布式版本控制工具，作为一名开发者，无论你喜不喜欢它，你都不能离开它，也不能不学习它。</p>\n<h2>Git</h2>\n<p>本章节介绍Git的基本知识、Git下载安装、环境配置。</p>\n<blockquote>\n<p>首先需要指明的是，<strong>GitHub不等于Git</strong>。GitHub是一个拥有很多仓库的在线网站，它的本体是一个Git服务器，这个Git服务器上存放着开发者们开发的各种项目。开发者们可以通过版本控制工具（如Git、SVN等）来使用GitHub上的各种项目。Git是一款分布式版本控制工具，我们可以使用Git来对项目进行管理，也可以通过它来使用GitHub上的各种项目。</p>\n</blockquote>\n<h4>Git基本知识</h4>\n<h4>Git下载安装</h4>\n<h4>Git环境配置</h4>\n<h2>从零开始使用Git</h2>\n<p>Git下载、安装、环境配置完成后，本章节介绍GitHub的使用、Git仓库的建立、 Git管理文件。</p>\n<h4>GitHub的使用</h4>\n<p>GitHub有两种常用的使用场景，一是从GitHub上下载项目到本地（以便于自己学习该项目或者在该项目的基础上做二次开发），二是把本地项目上传到GitHub（如果你没有自己的Git服务器的话）。本节先介绍<strong>如何从GitHub上下载项目</strong>，再介绍<strong>如何把本地项目上传到GitHub</strong>。</p>\n<ul>\n<li>\n<p>如何从GitHub上下载项目</p>\n<p>把一个项目从GitHub上下载到本地，采用以下的步骤：</p>\n<ul>\n<li>\n<p>首先在本地计算机上创建一个目录文件用来保存从GitHub上下载下来的项目</p>\n<blockquote>\n<p>例如：作者想把他感兴趣的项目保存到这个文件夹（C:\\Users\\chenqijun\\Desktop\\Files\\study）</p>\n</blockquote>\n</li>\n<li>\n<p>进行下面的操作：右键单击XX目录 -> 选择Open Git Bash Here打开</p>\n<blockquote>\n<p>windows11系统可能是：右键单击XX目录 -> 显示更多选项 -> Open Git Bash Here</p>\n<p>本例是右键单击study目录，选择Open Git Bash Here打开，然后按下面的步骤输入指令</p>\n</blockquote>\n</li>\n<li>\n<p>打开你感兴趣的项目所在仓库的GitHub网页，点击页面里的按钮Code -> HTTPS ->复制那串URL。</p>\n<blockquote>\n<p>这里以 <strong><a href=\"https://github.com/chenxulin/git-practice\">https://github.com/chenxulin/git-practice</a></strong> 为例，点击页面里的按钮Code -> HTTPS ->复制那串URL（本例复制 <strong><a href=\"https://github.com/chenxulin/git-practice.git\">https://github.com/chenxulin/git-practice.git</a></strong> ）。</p>\n</blockquote>\n</li>\n<li>\n<p>在已经打开的Open Git Bash Here终端界面输入指令git clone XXX，克隆你感兴趣的项目。</p>\n<blockquote>\n<p>本例在终端界面输入 <strong>git clone <a href=\"https://github.com/chenxulin/git-practice.git\">https://github.com/chenxulin/git-practice.git</a></strong> 即可把GitHub上的项目克隆到准备好的目录中。（有两种clone方式，使用HTTPS和SSH clone都可以，作者初学的时候使用的是HTTPS方式clone，故只介绍HTTPS来进行clone。SSH clone 方式有它的优点，想用SSH clone请自学。）</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">Cloning into <span class=\"token string\">'git-practice'</span><span class=\"token punctuation\">..</span>.\r\nremote: Enumerating objects: <span class=\"token number\">3</span>, done.\r\nremote: Counting objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">3</span>/3<span class=\"token punctuation\">)</span>, done.\r\nremote: Total <span class=\"token number\">3</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>, reused <span class=\"token number\">3</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>, pack-reused <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span>from <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\nReceiving objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">3</span>/3<span class=\"token punctuation\">)</span>, done.</code></pre></div>\n<p>终端界面如上，就说明已经把该项目从GitHub上克隆到本地目录中了，打开本地你准备好的目录即可看到该项目。</p>\n</blockquote>\n<ul>\n<li>克隆好后就可以使用开发工具（如IDEA、VS Code等）对下载的项目进行学习或者二次开发了。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>如何把本地项目上传到GitHub</p>\n</li>\n</ul>\n<h4>Git仓库的建立</h4>\n<h4>Git管理文件</h4>\n<h2>多分支协作开发</h2>\n<p>在实际项目的开发过程中，个人的力量总是有限的，一个大型的项目往往需要多位开发者协作完成，为了使得每位开发者提交代码的过程不至于相互发生冲突而产生混乱，每一位开发者都会在属于自己的分支上进行开发，最后把各自开发的结果合并起来，这就是多分支协作开发。本章节介绍多分支协作开发。</p>\n<h2>GitHub</h2>\n<p>本章节介绍GitHub的一些其他功能。</p>\n<h2>拾遗</h2>\n<p>本章节介绍一些即使不懂也不影响使用的知识点。</p>","frontmatter":{"title":"How to use Git","date":"December 28, 2024","description":"Git 是一款十分好用的分布式版本控制工具，作为一名开发者，无论你喜不喜欢它，你都不能离开它，也不能不学习它。"}},"previous":{"fields":{"slug":"/typora/Typora active/"},"frontmatter":{"title":"How to active typora"}},"next":null},"pageContext":{"id":"3dc6140a-076f-536b-9209-f31ac0fe20e7","previousPostId":"a9a6b665-7255-5929-bd0f-c03a8e822e31","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}